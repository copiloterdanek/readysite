/* ===== –ú–û–î–£–õ–¨ 1: –ö–û–ù–¢–ï–ô–ù–ï–† (–ê–í–¢–û–ù–û–ú–ù–´–ô) ===== */
const HeroContainer1 = {
    element: document.getElementById('heroContainer1'),
    
    init() {
        console.log('‚úÖ HeroContainer1 (–ú–ï–¢–ê–õ–õ–û–ö–û–ù–°–¢–†–£–ö–¶–ò–ò –ü–†–û–ò–ó–í–û–î–°–¢–í–û –í –ö–ê–†–ï–õ–ò–ò) –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return this;
    },

    setHeight(height) {
        if (this.element) {
            this.element.style.height = height + 'px';
            console.log(`üìê –í—ã—Å–æ—Ç–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: ${height}px`);
        }
    },

    setMaxWidth(maxWidth) {
        if (this.element) {
            this.element.style.maxWidth = maxWidth + 'px';
            console.log(`üìè –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: ${maxWidth}px`);
        }
    }
};

/* ===== –ú–û–î–£–õ–¨ 2: –°–õ–ê–ô–î–ï–† –ú–ï–¢–ê–õ–õ–û–ö–û–ù–°–¢–†–£–ö–¶–ò–ô (–ê–í–¢–û–ù–û–ú–ù–´–ô) ===== */
const BackgroundSlider1 = {
    element: document.getElementById('backgroundSlider1'),
    container: document.getElementById('slidesContainer1'),
    currentSlide: 0,
    slides: [],
    interval: null,
    
    images: [
        'https://i.ibb.co/60NfxRCs/cache-2475882079.jpg',
        'https://i.ibb.co/gF7bg06b/02-2665e34-e6852ed2247026c0ced911afe1e749d0.jpg',
        'https://i.ibb.co/wZd5dCSn/metallokonstrukcii-na-zakaz.jpg',
        'https://i.ibb.co/V0Fz0dhd/advantages-of-building-a-metal-building-ganneston-construction.jpg'
    ],
    
    init() {
        if (this.container) {
            this.createSlides();
            this.startSlideshow();
            console.log(`‚úÖ BackgroundSlider1 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω - ${this.images.length} —Ñ–æ—Ç–æ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π`);
        }
        return this;
    },
    
    createSlides() {
        this.images.forEach((imageSrc) => {
            const slide = document.createElement('div');
            slide.className = 'slide-item1';
            slide.style.backgroundImage = `url("${imageSrc}")`;
            slide.style.backgroundSize = 'cover';
            slide.style.backgroundPosition = 'center';
            
            this.container.appendChild(slide);
            this.slides.push(slide);
        });
        
        this.updateSliderPosition();
    },
    
    updateSliderPosition() {
        if (this.container) {
            const translateX = -this.currentSlide * 100;
            this.container.style.transform = `translateX(${translateX}%)`;
        }
    },
    
    nextSlide() {
        this.currentSlide = (this.currentSlide + 1) % this.slides.length;
        this.updateSliderPosition();
        console.log(`üîÑ –ú–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å–ª–∞–π–¥ ${this.currentSlide + 1} –∏–∑ ${this.slides.length}`);
    },
    
    changeSpeed(intervalMs) {
        this.stopSlideshow();
        this.interval = setInterval(() => {
            this.nextSlide();
        }, intervalMs);
        console.log(`‚ö° –°–∫–æ—Ä–æ—Å—Ç—å —Å–ª–∞–π–¥–µ—Ä–∞ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ ${intervalMs}ms`);
    },
    
    startSlideshow() {
        this.interval = setInterval(() => {
            this.nextSlide();
        }, 5000);
    },
    
    stopSlideshow() {
        if (this.interval) {
            clearInterval(this.interval);
            this.interval = null;
        }
    }
};

/* ===== –ú–û–î–£–õ–¨ 3–ê: –ì–õ–ê–í–ù–´–ô –ó–ê–ì–û–õ–û–í–û–ö (–ê–í–¢–û–ù–û–ú–ù–´–ô) ===== */
const HeroTitleMain1 = {
    element: document.getElementById('heroTitleMain1'),
    textElement: null,
    
    init() {
        this.textElement = this.element?.querySelector('.hero-title-main-text1');
        this.setupAnimations();
        console.log('‚úÖ HeroTitleMain1 (–ú–ï–¢–ê–õ–õ–û–ö–û–ù–°–¢–†–£–ö–¶–ò–ò) –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return this;
    },

    setText(text) {
        if (this.textElement) {
            this.textElement.textContent = text;
            console.log(`üìù –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: "${text}"`);
        }
    },

    setPosition(top, left = 0) {
        if (this.element) {
            this.element.style.top = top + 'px';
            this.element.style.left = left + 'px';
            console.log(`üìç –ü–æ–∑–∏—Ü–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: top=${top}px, left=${left}px`);
        }
    },

    setWidth(rightPadding) {
        if (this.element) {
            this.element.style.padding = `8px ${rightPadding}px 8px 45px`;
            console.log(`üìè –®–∏—Ä–∏–Ω–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –∏–∑–º–µ–Ω–µ–Ω–∞: rightPadding=${rightPadding}px`);
        }
    },

    setFontSize(fontSize) {
        if (this.textElement) {
            this.textElement.style.fontSize = fontSize + 'px';
            console.log(`üî§ –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: ${fontSize}px`);
        }
    },
    
    setupAnimations() {
        if (this.element) {
            this.element.style.opacity = '0';
            this.element.style.transform = 'translateY(-20px)';
            
            setTimeout(() => {
                this.element.style.transition = 'all 0.8s ease';
                this.element.style.opacity = '1';
                this.element.style.transform = 'translateY(0)';
            }, 500);
        }
    }
};

/* ===== –ú–û–î–£–õ–¨ 3–ë: –ü–û–î–ó–ê–ì–û–õ–û–í–û–ö (–ê–í–¢–û–ù–û–ú–ù–´–ô) ===== */
const HeroTitleSub1 = {
    element: document.getElementById('heroTitleSub1'),
    textElement: null,
    
    init() {
        this.textElement = this.element?.querySelector('.hero-title-sub-text1');
        this.setupAnimations();
        console.log('‚úÖ HeroTitleSub1 (–ü–†–û–ò–ó–í–û–î–°–¢–í–û –í –ö–ê–†–ï–õ–ò–ò) –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return this;
    },

    setText(text) {
        if (this.textElement) {
            this.textElement.textContent = text;
            console.log(`üìù –¢–µ–∫—Å—Ç –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: "${text}"`);
        }
    },

    setPosition(top, left = 0) {
        if (this.element) {
            this.element.style.top = top + 'px';
            this.element.style.left = left + 'px';
            console.log(`üìç –ü–æ–∑–∏—Ü–∏—è –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: top=${top}px, left=${left}px`);
        }
    },

    setWidth(rightPadding) {
        if (this.element) {
            this.element.style.padding = `8px ${rightPadding}px 8px 45px`;
            console.log(`üìè –®–∏—Ä–∏–Ω–∞ –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –∏–∑–º–µ–Ω–µ–Ω–∞: rightPadding=${rightPadding}px`);
        }
    },

    setFontSize(fontSize) {
        if (this.textElement) {
            this.textElement.style.fontSize = fontSize + 'px';
            console.log(`üî§ –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: ${fontSize}px`);
        }
    },

    setupAnimations() {
        if (this.element) {
            this.element.style.opacity = '0';
            this.element.style.transform = 'translateY(-20px)';
            
            setTimeout(() => {
                this.element.style.transition = 'all 0.8s ease';
                this.element.style.opacity = '1';
                this.element.style.transform = 'translateY(0)';
            }, 700);
        }
    }
};

/* ===== –ú–û–î–£–õ–¨ 4: –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê –ú–ï–¢–ê–õ–õ–û–ö–û–ù–°–¢–†–£–ö–¶–ò–ô (–ë–ï–ó –ò–ö–û–ù–û–ö) ===== */
const AdvantagesBlock1 = {
    element: document.getElementById('advantagesBlock1'),
    
    advantages: [
        {
            text: '–°–û–ë–°–¢–í–ï–ù–ù–û–ï –ü–†–û–ò–ó–í–û–î–°–¢–í–û –ú–ï–¢–ê–õ–õ–û–ö–û–ù–°–¢–†–£–ö–¶–ò–ô'
        },
        {
            text: '–ü–†–û–ï–ö–¢–ò–†–£–ï–ú –° –£–ß–ï–¢–û–ú –ù–ê–ö–û–ü–õ–ï–ù–ù–û–ì–û –û–ü–´–¢–ê'
        },
        {
            text: '–ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–´–ô –ú–û–ù–¢–ê–ñ'
        }
    ],
    
    init() {
        if (this.element) {
            this.createAdvantages();
            this.setupAnimations();
            console.log('‚úÖ AdvantagesBlock1 (–ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê –ú–ï–¢–ê–õ–õ–û–ö–û–ù–°–¢–†–£–ö–¶–ò–ô) –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        }
        return this;
    },

    setPosition(bottom, left = 0) {
        if (this.element) {
            this.element.style.bottom = bottom + 'px';
            this.element.style.left = left + 'px';
            console.log(`üìç –ü–æ–∑–∏—Ü–∏—è –±–ª–æ–∫–∞ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: bottom=${bottom}px, left=${left}px`);
        }
    },

    setWidth(width) {
        if (this.element) {
            this.element.style.width = width + 'px';
            console.log(`üìè –®–∏—Ä–∏–Ω–∞ –±–ª–æ–∫–∞ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: ${width}px`);
        }
    },

    setTextAlignment(leftPadding) {
        const items = this.element?.querySelectorAll('.advantage-item1');
        items?.forEach(item => {
            item.style.paddingLeft = leftPadding + 'px';
        });
        console.log(`üéØ –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: leftPadding=${leftPadding}px`);
    },
    
    createAdvantages() {
        this.advantages.forEach((advantage, index) => {
            const item = document.createElement('div');
            item.className = 'advantage-item1';
            item.style.display = 'flex';
            item.style.alignItems = 'center';
            item.style.marginBottom = '15px';
            
            // –°–û–ó–î–ê–Å–ú –¢–û–õ–¨–ö–û –¢–ï–ö–°–¢, –ë–ï–ó –ò–ö–û–ù–û–ö
            const text = document.createElement('span');
            text.className = 'advantage-text1';
            text.textContent = advantage.text;
            text.style.fontSize = '16px';
            text.style.fontWeight = '500';
            text.style.lineHeight = '1.4';
            
            item.appendChild(text);
            this.element.appendChild(item);
            
            // –ê–ù–ò–ú–ê–¶–ò–Ø –ü–û–Ø–í–õ–ï–ù–ò–Ø
            item.style.opacity = '0';
            item.style.transform = 'translateX(-30px)';
            
            setTimeout(() => {
                item.style.transition = 'all 0.6s ease';
                item.style.opacity = '1';
                item.style.transform = 'translateX(0)';
            }, 800 + (index * 200));
        });
    },
    
    setupAnimations() {
        console.log('üé¨ –ê–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    }
};

/* ===== –ú–û–î–£–õ–¨ 5: –ö–ù–û–ü–ö–ê –ú–ï–¢–ê–õ–õ–û–ö–û–ù–°–¢–†–£–ö–¶–ò–ô (–ü–†–û–°–¢–´–ï –ê–ù–ò–ú–ê–¶–ò–ò) ===== */
const ActionButton1 = {
    element: document.getElementById('actionButton1'),
    
    init() {
        if (this.element) {
            this.setupEventListeners();
            this.setupAnimations();
            console.log('‚úÖ ActionButton1 —Å –ø—Ä–æ—Å—Ç—ã–º–∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        }
        return this;
    },

    setText(text) {
        if (this.element) {
            this.element.innerHTML = text;
            console.log(`üìù –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –∏–∑–º–µ–Ω–µ–Ω: "${text}"`);
        }
    },

    setFontWeight(weight) {
        if (this.element) {
            this.element.style.fontWeight = weight;
            console.log(`üî§ –ñ–∏—Ä–Ω–æ—Å—Ç—å —à—Ä–∏—Ñ—Ç–∞ –∫–Ω–æ–ø–∫–∏ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: ${weight}`);
        }
    },

    setFontSize(fontSize) {
        if (this.element) {
            this.element.style.fontSize = fontSize + 'px';
            console.log(`üìè –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –∫–Ω–æ–ø–∫–∏ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: ${fontSize}px`);
        }
    },

    setPosition(bottom, right) {
        const buttonBlock = this.element?.parentElement;
        if (buttonBlock) {
            buttonBlock.style.bottom = bottom + 'px';
            buttonBlock.style.right = right + 'px';
            console.log(`üìç –ü–æ–∑–∏—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: bottom=${bottom}px, right=${right}px`);
        }
    },
    
    setupEventListeners() {
        if (this.element) {
            this.element.addEventListener('mouseenter', () => {
                this.element.style.transform = 'scale(1.05)';
                this.element.style.backgroundColor = '#e55a32';
            });
            
            this.element.addEventListener('mouseleave', () => {
                this.element.style.transform = 'scale(1)';
                this.element.style.backgroundColor = '#ff6b35';
            });
            
            this.element.addEventListener('mousedown', () => {
                this.element.style.transform = 'scale(0.95)';
                this.element.style.backgroundColor = '#d44a2b';
            });
            
            this.element.addEventListener('mouseup', () => {
                if (this.element.matches(':hover')) {
                    this.element.style.transform = 'scale(1.05)';
                    this.element.style.backgroundColor = '#e55a32';
                } else {
                    this.element.style.transform = 'scale(1)';
                    this.element.style.backgroundColor = '#ff6b35';
                }
            });
            
            this.element.addEventListener('click', () => {
                openContactPopup1();
                console.log('üî• –ö–Ω–æ–ø–∫–∞ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –Ω–∞–∂–∞—Ç–∞ - –æ—Ç–∫—Ä—ã–≤–∞–µ–º popup');
            });
        }
    },
    
    setupAnimations() {
        if (this.element) {
            this.element.style.opacity = '0';
            this.element.style.transform = 'translateY(20px)';
            
            setTimeout(() => {
                this.element.style.transition = 'all 0.3s ease';
                this.element.style.opacity = '1';
                this.element.style.transform = 'translateY(0)';
            }, 1200);
        }
    }
};

/* ===== –ú–û–î–£–õ–¨ 6: –í–°–ü–õ–´–í–ê–Æ–©–ï–ï –û–ö–ù–û (–ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ï) ===== */
const ContactPopup1 = {
    overlay: document.getElementById('contactPopup1'),
    scrollPosition: 0,
    
    init() {
        console.log('‚úÖ ContactPopup1 (–ó–ê–ö–ê–ó –ú–ï–¢–ê–õ–õ–û–ö–û–ù–°–¢–†–£–ö–¶–ò–ô) –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return this;
    },

    show() {
        if (this.overlay) {
            // –°–û–•–†–ê–ù–Ø–ï–ú –ü–û–ó–ò–¶–ò–Æ –°–ö–†–û–õ–õ–ê
            this.scrollPosition = window.pageYOffset;
            
            // –ë–õ–û–ö–ò–†–£–ï–ú –°–ö–†–û–õ–õ –°–¢–†–ê–ù–ò–¶–´
            document.body.style.position = 'fixed';
            document.body.style.top = `-${this.scrollPosition}px`;
            document.body.style.width = '100%';
            document.body.style.overflow = 'hidden';
            
            // –ü–û–ö–ê–ó–´–í–ê–ï–ú POPUP
            this.overlay.classList.add('show');
            console.log('üì± Popup –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ–∫–∞–∑–∞–Ω, —Å–∫—Ä–æ–ª–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
        }
    },

    hide() {
        if (this.overlay) {
            // –£–ë–ò–†–ê–ï–ú POPUP
            this.overlay.classList.remove('show');
            
            // –í–û–ó–í–†–ê–©–ê–ï–ú –°–ö–†–û–õ–õ –°–¢–†–ê–ù–ò–¶–´
            document.body.style.position = '';
            document.body.style.top = '';
            document.body.style.width = '';
            document.body.style.overflow = '';
            
            // –í–û–°–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–ú –ü–û–ó–ò–¶–ò–Æ –°–ö–†–û–õ–õ–ê
            window.scrollTo(0, this.scrollPosition);
            
            console.log('‚ùå Popup –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π —Å–∫—Ä—ã—Ç, —Å–∫—Ä–æ–ª–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
        }
    }
};

/* ===== –ú–û–î–£–õ–¨ 7: –ü–†–û–¶–ï–°–° –ü–†–û–ò–ó–í–û–î–°–¢–í–ê –ú–ï–¢–ê–õ–õ–û–ö–û–ù–°–¢–†–£–ö–¶–ò–ô (–ê–í–¢–û–ù–û–ú–ù–´–ô) ===== */
const ProcessSteps1 = {
    container: document.getElementById('processStepsContainer1'),
    steps: [],
    
    init() {
        this.steps = document.querySelectorAll('.process-step1');
        this.showAllStepsImmediately();
        console.log('‚úÖ ProcessSteps1 (–≠–¢–ê–ü–´ –ü–†–û–ò–ó–í–û–î–°–¢–í–ê –ú–ï–¢–ê–õ–õ–û–ö–û–ù–°–¢–†–£–ö–¶–ò–ô) –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω - –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤–∏–¥–Ω—ã —Å—Ä–∞–∑—É');
        return this;
    },

    showAllStepsImmediately() {
        this.steps.forEach((step, index) => {
            if (step) {
                step.style.animationPlayState = 'running';
                step.style.opacity = '1';
                step.style.transform = 'translateY(0)';
                
                console.log(`üëÅÔ∏è –®–∞–≥ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π ${index + 1} –ø–æ–∫–∞–∑–∞–Ω —Å—Ä–∞–∑—É`);
            }
        });
    },

    updateStepText(stepNumber, title, text) {
        const step = document.getElementById(`processStep${stepNumber}`);
        if (step) {
            const titleElement = step.querySelector('.process-title1');
            const textElement = step.querySelector('.process-text1');
            
            if (titleElement) titleElement.textContent = title;
            if (textElement) textElement.textContent = text;
            
            console.log(`üìù –û–±–Ω–æ–≤–ª–µ–Ω —à–∞–≥ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π ${stepNumber}: "${title}"`);
        }
    },

    setContainerStyle(maxWidth) {
        if (this.container) {
            this.container.style.maxWidth = maxWidth + 'px';
            console.log(`üìè –®–∏—Ä–∏–Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: ${maxWidth}px`);
        }
    }
};

/* ===== –ì–õ–û–ë–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ===== */
function openContactPopup1() {
    ContactPopup1.show();
}

function closeContactPopup1() {
    ContactPopup1.hide();
}

/* ===== EVENT LISTENERS ===== */
const contactPopupElement = document.getElementById('contactPopup1');
if (contactPopupElement) {
    contactPopupElement.addEventListener('click', function(e) {
        if (e.target === this) {
            closeContactPopup1();
        }
    });
}

document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
        closeContactPopup1();
    }
});

/* ===== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –í–°–ï–• –ú–û–î–£–õ–ï–ô –ú–ï–¢–ê–õ–õ–û–ö–û–ù–°–¢–†–£–ö–¶–ò–ô ===== */
document.addEventListener('DOMContentLoaded', function() {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –º–æ–¥—É–ª–µ–π –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π...');
    
    try {
        const container1 = HeroContainer1.init();
        const slider1 = BackgroundSlider1.init();
        const titleMain1 = HeroTitleMain1.init();
        const titleSub1 = HeroTitleSub1.init();
        const advantages1 = AdvantagesBlock1.init();
        const button1 = ActionButton1.init();
        const popup1 = ContactPopup1.init();
        const processSteps1 = ProcessSteps1.init();
        
        console.log('üöÄ –í–°–ï –ú–û–î–£–õ–ò –ú–ï–¢–ê–õ–õ–û–ö–û–ù–°–¢–†–£–ö–¶–ò–ô –ò–ù–ò–¶–ò–ê–õ–ò–ó–ò–†–û–í–ê–ù–´');
        console.log('üè≠ –ú–ï–¢–ê–õ–õ–û–ö–û–ù–°–¢–†–£–ö–¶–ò–ò: –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –≤ –ö–∞—Ä–µ–ª–∏–∏');
        console.log('üì∏ –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø: 4 —Ñ–æ—Ç–æ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π');
        console.log('‚ú® –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê: 3 –ø—É–Ω–∫—Ç–∞ –ë–ï–ó –ò–ö–û–ù–û–ö');
        console.log('üëÅÔ∏è –ü–†–û–¶–ï–°–°: 5 —ç—Ç–∞–ø–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ - –í–°–ï –í–ò–î–ù–´ –°–†–ê–ó–£');
        console.log('‚è±Ô∏è –ê–í–¢–û–ü–†–û–ö–†–£–¢–ö–ê: 5 —Å–µ–∫—É–Ω–¥');
        console.log('üî§ –®–†–ò–§–¢–´: Montserrat');
        
        window.SliderModules1 = {
            Container: container1,
            Slider: slider1,
            TitleMain: titleMain1,
            TitleSub: titleSub1,
            Advantages: advantages1,
            Button: button1,
            Popup: popup1,
            ProcessSteps: processSteps1
        };

        console.log('üéõÔ∏è –í—Å–µ –º–æ–¥—É–ª–∏ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ window.SliderModules1');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–¥—É–ª–µ–π:', error);
    }
});
